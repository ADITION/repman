- pipeline: "test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Upsource VSC hook"
    type: "HTTP"
    notification_url: "https://upsource.lan/~vcs/repman"
    method: "GET"
    content: "{\r\n    \"workspace\": {\r\n        \"url\": \"$BUDDY_WORKSPACE_URL\",\r\n        \"id\": \"$BUDDY_WORKSPACE_ID\",\r\n        \"name\": \"$BUDDY_WORKSPACE_NAME\",\r\n        \"domain\": \"$BUDDY_WORKSPACE_DOMAIN\"\r\n    },\r\n    \"invoker\": {\r\n        \"url\": \"$BUDDY_INVOKER_URL\",\r\n        \"id\": \"$BUDDY_INVOKER_ID\",\r\n        \"name\": \"$BUDDY_INVOKER_NAME\",\r\n        \"avatar_url\": \"$BUDDY_INVOKER_AVATAR_URL\",\r\n        \"email\": \"$BUDDY_INVOKER_EMAIL\"\r\n    },\r\n    \"project\": {\r\n        \"url\": \"$BUDDY_PROJECT_URL\",\r\n        \"name\": \"$BUDDY_PROJECT_NAME_ID\",\r\n        \"display_name\": \"$BUDDY_PROJECT_NAME\"\r\n    },\r\n    \"execution\": {\r\n        \"url\": \"$BUDDY_EXECUTION_URL\",\r\n        \"id\": \"$BUDDY_EXECUTION_ID\",\r\n        \"start_date\": \"$BUDDY_EXECUTION_START_DATE\",\r\n        \"mode\": \"$BUDDY_EXECUTION_MODE\",\r\n        \"clear_cache\": \"$BUDDY_EXECUTION_CLEAR_CACHE\",\r\n        \"refresh\": \"$BUDDY_EXECUTION_REFRESH\",\r\n        \"comment\": \"$BUDDY_EXECUTION_COMMENT\",\r\n        \"branch\": \"$BUDDY_EXECUTION_BRANCH\",\r\n        \"tag\": \"$BUDDY_EXECUTION_TAG\",\r\n        \"from_revision\": {\r\n            \"revision\": \"$BUDDY_EXECUTION_PREVIOUS_REVISION\",\r\n            \"subject\": \"$BUDDY_EXECUTION_PREVIOUS_REVISION_SUBJECT\"\r\n        },\r\n        \"to_revision\": {\r\n            \"url\": \"$BUDDY_EXECUTION_REVISION_URL\",\r\n            \"revision\": \"$BUDDY_EXECUTION_REVISION\",\r\n            \"subject\": \"$BUDDY_EXECUTION_REVISION_SUBJECT\",\r\n            \"committer_email\": \"$BUDDY_EXECUTION_REVISION_COMMITTER_EMAIL\"\r\n        },\r\n        \"pipeline\": {\r\n            \"url\": \"$BUDDY_PIPELINE_URL\",\r\n            \"id\": \"$BUDDY_PIPELINE_ID\",\r\n            \"name\": \"$BUDDY_PIPELINE_NAME\",\r\n            \"trigger_mode\": \"$BUDDY_PIPELINE_TRIGGER_MODE\",\r\n            \"ref_name\": \"$BUDDY_PIPELINE_REF_NAME\",\r\n            \"target_site_url\": \"$BUDDY_PIPELINE_TARGET_SITE_URL\"\r\n        },\r\n        \"failed_action\": {\r\n            \"name\": \"$BUDDY_FAILED_ACTION_NAME\",\r\n            \"logs\": \"$BUDDY_FAILED_ACTION_LOGS\"\r\n        }\r\n    }\r\n}"
    headers:
    - name: "User-Agent"
      value: "Buddy"
    - name: "Content-Type"
      value: "application/json"
    trigger_condition: "ALWAYS"
  - action: "Execute: composer tests"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/php"
    docker_image_tag: "7.4.1"
    execute_commands:
    - "composer validate"
    - "composer install"
    - "rm -rf var/cache"
    - "composer reset-db"
    - "composer tests"
    setup_commands:
    - "apt-get update && apt-get install -y git zip"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - ""
    - "# php ext pdo_pgsql"
    - "apt-get install -y libpq-dev"
    - "docker-php-ext-configure pdo_pgsql --with-pdo-pgsql"
    - "docker-php-ext-install pdo_pgsql"
    - ""
    - "# coverage driver"
    - "pecl install pcov && docker-php-ext-enable pcov"
    - ""
    - "# intl"
    - "apt-get install -y libicu-dev && \\"
    - "  docker-php-ext-configure intl && \\"
    - "  docker-php-ext-install intl"
    - ""
    - "# zip"
    - "apt-get install -y zip unzip libzip-dev"
    - "docker-php-ext-configure zip"
    - "docker-php-ext-install zip"
    - "  "
    - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
    services:
    - type: "POSTGRE_SQL"
      version: "11.6-alpine"
      connection:
        host: "postgres"
        port: 5432
        user: "main"
        password: "main"
        db: "main"
    mount_filesystem_path: "/buddy/repman"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Upsource build status"
    type: "HTTP"
    notification_url: "https://upsource.lan/~buildStatus/"
    method: "POST"
    content: "{\r\n\t\"key\": \"REPMAN-$BUDDY_EXECUTION_ID\",\r\n\t\"state\": \"success\",\r\n\t\"url\": \"$BUDDY_EXECUTION_URL\",\r\n\t\"project\": \"repman\",\r\n\t\"revision\": \"$BUDDY_EXECUTION_REVISION\"\r\n}"
    headers:
    - name: "Content-Type"
      value: "application/json"
    - name: "User-Agent"
      value: "Buddy"
    - name: "Authorization"
      value: "Basic $UPSOURCE_TOKEN"
    trigger_condition: "ALWAYS"
  - action: "Run repman/deploy"
    type: "RUN_NEXT_PIPELINE"
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    trigger_variable_value: "master"
    trigger_variable_key: "BUDDY_EXECUTION_BRANCH"
    revision: "INHERIT"
    trigger_condition: "VAR_IS"
    next_project_name: "repman"
    next_pipeline_name: "deploy"
  - action: "Send build status to upsource"
    type: "HTTP"
    trigger_time: "ON_FAILURE"
    notification_url: "https://upsource.lan/~buildStatus/"
    method: "POST"
    content: "{\r\n\t\"key\": \"REPMAN-$BUDDY_EXECUTION_ID\",\r\n\t\"state\": \"failed\",\r\n\t\"url\": \"$BUDDY_EXECUTION_URL\",\r\n\t\"project\": \"repman\",\r\n\t\"revision\": \"$BUDDY_EXECUTION_REVISION\",\r\n\t\"description\": \"Failed: $BUDDY_FAILED_ACTION_NAME\"\r\n}"
    headers:
    - name: "User-Agent"
      value: "Buddy"
    - name: "Authorization"
      value: "Basic $UPSOURCE_TOKEN"
    - name: "Content-Type"
      value: "application/json"
    trigger_condition: "ALWAYS"
  variables:
  - key: "DATABASE_URL"
    value: "postgresql://main:main@postgres:5432/main?serverVersion=11&charset=utf8"
    id: 819
    description: ""
- pipeline: "security"
  trigger_mode: "SCHEDULED"
  ref_name: "master"
  ref_type: "BRANCH"
  start_date: "2020-02-05T07:00:00.000Z"
  delay: 1440
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: composer security"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/php"
    docker_image_tag: "7.4.1"
    execute_commands:
    - "composer install --no-scripts"
    - "composer security"
    setup_commands:
    - "apt-get update && apt-get install -y git zip"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - ""
    - "# php ext pdo_pgsql"
    - "apt-get install -y libpq-dev"
    - "docker-php-ext-configure pdo_pgsql --with-pdo-pgsql"
    - "docker-php-ext-install pdo_pgsql"
    - ""
    - "# coverage driver"
    - "pecl install pcov && docker-php-ext-enable pcov"
    - ""
    - "# intl"
    - "apt-get install -y libicu-dev && \\"
    - "  docker-php-ext-configure intl && \\"
    - "  docker-php-ext-install intl"
    - ""
    - "# zip"
    - "apt-get install -y zip unzip libzip-dev"
    - "docker-php-ext-configure zip"
    - "docker-php-ext-install zip"
    - "  "
    - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
    mount_filesystem_path: "/buddy/repman"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to Telegram"
    type: "TELEGRAM"
    trigger_time: "ON_FAILURE"
    content: "âš  Security Alert: [#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME failed execution by [$BUDDY_INVOKER_NAME]($BUDDY_INVOKER_URL)"
    parse_mode: "MARKDOWN"
    trigger_condition: "ALWAYS"
    integration_hash: "5e3a90148c7dd95e699cf962"
  variables:
  - key: "DATABASE_URL"
    value: "postgresql://main:main@postgres:5432/main?serverVersion=11&charset=utf8"
    id: 829
    description: ""
- pipeline: "setup"
  trigger_mode: "MANUAL"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run setup playbook"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "19.10"
    execute_commands:
    - "ansible-playbook ansible/setup.yml -i ansible/inventories/staging --extra-vars '{\"server_hostname\":\"repman.lan\",\"openssl_generate_selfsigned_cert\":true}'"
    setup_commands:
    - "apt-get update && apt-get -y install ansible ssh python3-distutils"
    - "mkdir ~/.ssh && ssh-keyscan -p 6464 192.168.5.231 >> ~/.ssh/known_hosts"
    mount_filesystem_path: "/buddy/repman"
    shell: "BASH"
    trigger_condition: "ALWAYS"
- pipeline: "deploy"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://repman.lan"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Run deploy playbook"
    type: "BUILD"
    working_directory: "/buddy/repman"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "19.10"
    execute_commands:
    - "ansible-playbook ansible/deploy.yml -i ansible/inventories/staging --extra-vars '{\"server_hostname\":\"repman.lan\"}'"
    setup_commands:
    - "apt-get update && apt-get -y install ansible ssh python3-distutils"
    - "mkdir ~/.ssh && ssh-keyscan -p 6464 192.168.5.231 >> ~/.ssh/known_hosts"
    mount_filesystem_path: "/buddy/repman"
    shell: "BASH"
    trigger_condition: "ALWAYS"
